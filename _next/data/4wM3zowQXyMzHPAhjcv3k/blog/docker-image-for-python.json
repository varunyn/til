{"pageProps":{"title":"Building docker image for python app","date":"2021-06-21T00:00:00.000Z","desc":"How to create Docker image for Python application and run sample application","tags":["docker","python","ðŸŒ¿"],"readingTime":{"text":"1 min read","minutes":0.44,"time":26400,"words":88},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      a: \"a\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"Dockerfile\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-docker\",\n        children: _jsxs(_components.code, {\n          className: \"language-docker code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token instruction\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"FROM\"\n              }), \" python:3.9-slim\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token instruction\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"WORKDIR\"\n              }), \" /app\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token instruction\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"COPY\"\n              }), \" . /app\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token instruction\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"RUN\"\n              }), \" pip install -r requirements.txt\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token instruction\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"ENTRYPOINT\"\n              }), \" [ \", _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"python\\\"\"\n              }), \" ]\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token instruction\",\n              children: [_jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"CMD\"\n              }), \" [ \", _jsx(_components.span, {\n                className: \"token string\",\n                children: \"\\\"app.py\\\"\"\n              }), \" ]\"]\n            }), \"\\n\"]\n          })]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Sample Flask app to try containerize\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-python\",\n        children: _jsxs(_components.code, {\n          className: \"language-python code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"from\"\n            }), \" flask \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"import\"\n            }), \" Flask\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"app \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" Flask\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"__name__\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token decorator annotation punctuation\",\n              children: [\"@app\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), \"route\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"/\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"def\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"hello_world\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"<p>Hello, World!</p>\\\"\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"port \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"5100\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" __name__ \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"==\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'__main__'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    app\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), \"run\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"host\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"0.0.0.0\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" port\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \"port\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          })]\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"and then start the app using\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-shell\",\n        children: _jsx(_components.code, {\n          className: \"language-shell code-highlight\",\n          children: _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"python app.py\\n\"\n          })\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"I am using slim image instead of alpine. Good \", _jsx(_components.a, {\n          href: \"https://pythonspeed.com/articles/alpine-docker-python/\",\n          children: \"article\"\n        }), \" on why not to use alpine for python.\\nOfficial Docker \", _jsx(_components.a, {\n          href: \"https://docs.docker.com/language/python/build-images/\",\n          children: \"docs\"\n        }), \" for building python image.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"tweetIDs":[],"slug":"docker-image-for-python","tweets":null},"__N_SSG":true}