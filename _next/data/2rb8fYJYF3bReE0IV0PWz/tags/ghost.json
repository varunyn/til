{"pageProps":{"posts":[{"title":"Using Ghost mcp in Cursor","date":"2025-06-10T00:00:00.000Z","desc":null,"tags":["ghost","ðŸŒ¿"],"content":"\nToday, while scrolling through X (formerly Twitter), I came across a post about MCP (Model Control Panel). In the replies, someone casually mentioned GhostMCP, and I thoughtâ€”wait, whatâ€™s that?\n\nCurious, I did a quick Google search and found the GhostMCP GitHub repository. It turns out, GhostMCP is an open-source Model Control Panel designed to run locally, giving you a minimal UI to interact with different LLMs in a streamlined way.\n\n#### Quick Install on Cursor\n\nI tested it out quickly using Cursor (the AI-powered code editor), and it worked surprisingly well! However, I noticed the README in the GitHub repo doesn't provide local setup instructions specifically for Cursor users, so I thought Iâ€™d share the exact steps I followed to get it up and running.\n\nSteps to Set Up GhostMCP Locally with Cursor\n\n1. First, clone or download the project from GitHub:\n\n```\ngit clone https://github.com/MFYDev/ghost-mcp.git\ncd ghost-mcp\n```\n\n2. Install dependencies:\n\n```\nnpm install\n```\n\n3. In Cursor, open your MCP settings and modify the relevant section to point to the GhostMCP server script. Update the configuration like this:\n\n````json\n\"command\": \"node\",\n\"args\": [\n  \"path-to/ghost-mcp-main/build/server.js\"\n],```\n\nMake sure to replace path-to with the actual path to your local ghost-mcp directory.\n\n````\n","slug":"ghost-mcp"},{"title":"Using prismjs in ghost","date":"2021-07-06T00:00:00.000Z","desc":null,"tags":["ghost","ðŸŒ¿"],"content":"\nhttps://www.pixelite.co.nz/article/add-prismjs-to-ghost/\n","slug":"add-prism-to-ghost"}],"tag":"ghost"},"__N_SSG":true}