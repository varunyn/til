{"pageProps":{"title":"My first post!","date":"2021-02-14T19:05:27.220Z","desc":"Welcome to my first blog post","content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://nodeca.github.io/pica/demo/\"\n  }, \"pica\")), \" - high quality and fast image\\nresize in browser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://github.com/nodeca/babelfish/\"\n  }, \"babelfish\")), \" - developer friendly\\ni18n with plurals support and easy syntax.\")), mdx(\"p\", null, \"You will like those projects!\"), mdx(\"hr\", null), mdx(\"h1\", null, \"h1 Heading 8-)\"), mdx(\"h2\", null, \"h2 Heading\"), mdx(\"h3\", null, \"h3 Heading\"), mdx(\"h4\", null, \"h4 Heading\"), mdx(\"h5\", null, \"h5 Heading\"), mdx(\"h6\", null, \"h6 Heading\"), mdx(\"h2\", null, \"Horizontal Rules\"), mdx(\"hr\", null), mdx(\"hr\", null), mdx(\"hr\", null), mdx(\"h2\", null, \"Typographic replacements\"), mdx(\"p\", null, \"Enable typographer option to see result.\"), mdx(\"p\", null, \"(c) (C) (r) (R) (tm) (TM) (p) (P) +-\"), mdx(\"p\", null, \"test.. test... test..... test?..... test!....\"), mdx(\"p\", null, \"!!!!!! ???? ,, -- ---\"), mdx(\"p\", null, \"\\\"Smartypants, double quotes\\\" and 'single quotes'\"), mdx(\"h2\", null, \"Emphasis\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This is bold text\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This is bold text\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"This is italic text\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"This is italic text\")), mdx(\"p\", null, mdx(\"del\", {\n    parentName: \"p\"\n  }, \"Strikethrough\")), mdx(\"h2\", null, \"Blockquotes\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Blockquotes can also be nested...\"), mdx(\"blockquote\", {\n    parentName: \"blockquote\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"...by using additional greater-than signs right next to each other...\"), mdx(\"blockquote\", {\n    parentName: \"blockquote\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"...or with spaces between arrows.\")))), mdx(\"h2\", null, \"Lists\"), mdx(\"p\", null, \"Unordered\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a list by starting a line with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"+\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"*\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sub-lists are made by indenting 2 spaces:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Marker character change forces new list start:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ac tristique libero volutpat at\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Facilisis in pretium nisl aliquet\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nulla volutpat aliquam velit\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Very easy!\")), mdx(\"p\", null, \"Ordered\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lorem ipsum dolor sit amet\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Consectetur adipiscing elit\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Integer molestie lorem at massa\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You can use sequential numbers...\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"...or keep all the numbers as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.\")))), mdx(\"p\", null, \"Start numbering with offset:\"), mdx(\"ol\", {\n    \"start\": 57\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"foo\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"bar\")), mdx(\"h2\", null, \"Code\"), mdx(\"p\", null, \"Inline \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"code\")), mdx(\"p\", null, \"Indented code\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"// Some comments\\nline 1 of code\\nline 2 of code\\nline 3 of code\\n\")), mdx(\"p\", null, \"Block code \\\"fences\\\"\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Sample text here...\\n\")), mdx(\"p\", null, \"Syntax highlighting\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"var foo = function (bar) {\\n  return bar++;\\n};\\n\\nconsole.log(foo(5));\\n\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<ul><li><strong><a href=\"https://nodeca.github.io/pica/demo/\">pica</a></strong> - high quality and fast image\nresize in browser.</li><li><strong><a href=\"https://github.com/nodeca/babelfish/\">babelfish</a></strong> - developer friendly\ni18n with plurals support and easy syntax.</li></ul><p>You will like those projects!</p><hr/><h1>h1 Heading 8-)</h1><h2>h2 Heading</h2><h3>h3 Heading</h3><h4>h4 Heading</h4><h5>h5 Heading</h5><h6>h6 Heading</h6><h2>Horizontal Rules</h2><hr/><hr/><hr/><h2>Typographic replacements</h2><p>Enable typographer option to see result.</p><p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p><p>test.. test... test..... test?..... test!....</p><p>!!!!!! ???? ,, -- ---</p><p>&quot;Smartypants, double quotes&quot; and &#x27;single quotes&#x27;</p><h2>Emphasis</h2><p><strong>This is bold text</strong></p><p><strong>This is bold text</strong></p><p><em>This is italic text</em></p><p><em>This is italic text</em></p><p><del>Strikethrough</del></p><h2>Blockquotes</h2><blockquote><p>Blockquotes can also be nested...</p><blockquote><p>...by using additional greater-than signs right next to each other...</p><blockquote><p>...or with spaces between arrows.</p></blockquote></blockquote></blockquote><h2>Lists</h2><p>Unordered</p><ul><li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li><li>Sub-lists are made by indenting 2 spaces:<ul><li>Marker character change forces new list start:<ul><li>Ac tristique libero volutpat at</li></ul><ul><li>Facilisis in pretium nisl aliquet</li></ul><ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li><li>Very easy!</li></ul><p>Ordered</p><ol><li><p>Lorem ipsum dolor sit amet</p></li><li><p>Consectetur adipiscing elit</p></li><li><p>Integer molestie lorem at massa</p></li><li><p>You can use sequential numbers...</p></li><li><p>...or keep all the numbers as <code>1.</code></p></li></ol><p>Start numbering with offset:</p><ol start=\"57\"><li>foo</li><li>bar</li></ol><h2>Code</h2><p>Inline <code>code</code></p><p>Indented code</p><pre><code>// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n</code></pre><p>Block code &quot;fences&quot;</p><pre><code>Sample text here...\n</code></pre><p>Syntax highlighting</p><pre><code class=\"language-js\">var foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n</code></pre>","scope":{}}},"__N_SSG":true}